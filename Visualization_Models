import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler

# Load the dataset
data = pd.read_csv(r"C:\Users\twarr\Downloads\College_Data (1) (3).csv")

# Assuming the dataset has the following columns, adjust if needed
# 'PhD_Percentage', 'Student_to_Faculty_Ratio', 'Tuition_Cost', and 'Graduation_Rate'
# Replace with the exact column names from your CSV file if they differ
data = data[['PhD_Percentage', 'Student_to_Faculty_Ratio', 'Tuition_Cost', 'Graduation_Rate']]

# Create a binary target variable: 1 if Graduation Rate > 62.3%, 0 otherwise
data['High_Graduation'] = (data['Graduation_Rate'] > 62.3).astype(int)

# Features and target
X = data[['PhD_Percentage', 'Student_to_Faculty_Ratio', 'Tuition_Cost']]
y = data['High_Graduation']

# Standardize the features for better model performance
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Fit the logistic regression model
model = LogisticRegression()
model.fit(X_scaled, y)

# Extract coefficients
coefficients = model.coef_[0]
feature_names = X.columns

# Plot the coefficients
plt.figure(figsize=(10, 6))
plt.barh(feature_names, coefficients, color='teal')
plt.xlabel('Coefficient Value')
plt.title('Logistic Regression Coefficient Plot')
plt.axvline(x=0, color='gray', linestyle='--')
plt.grid(axis='x', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()
